from aiogram.types import Message, CallbackQuery
from loader import dp, bot
from aiogram.dispatcher.filters import Text
from keyboards.inline.Fidback_inline.button_fid import menu_feed_button, menu_reply_button, exit_button
from keyboards.inline.choice_buttons import determined_button
from aiogram.dispatcher import FSMContext
from states.feed_state.feed_b_state import feed_back_b


@dp.message_handler(Text(equals=['–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤üñç']))
async def feed_b(m: Message):
    await m.answer_sticker(r'CAACAgEAAxkBAAEHmphg5GCNMNtE-EjadXMd6KtJSY3XBQACbQkAAr-MkAQgBEK1gxDuvSAE')
    await m.answer(f"–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëâ <b>–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤</b>üñå\n"
                   f"–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ", reply_markup=menu_feed_button)
    await m.answer(f"<a href='https://t.me/joinchat/kI3mZ8s2f15jOWQ6'> –°—Å—ã–ª–∫–∞ </a>")


@dp.message_handler(Text(equals=['–ù–∞–∑–∞–¥‚¨ÖÔ∏è']))
async def feed_backi(m: Message):
    await m.delete()
    await m.answer_sticker(r'CAACAgEAAxkBAAEHmr5g5GdaUfc_nrwFkfT0lIrQC97yKgACcgkAAr-MkAQvBrlOwuVncCAE')
    await m.answer(f"üèõ–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüèõ", reply_markup=determined_button)


@dp.message_handler(Text(equals=['‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úÖ']), state=feed_back_b)
async def confirm(m: Message, state: FSMContext):
    await m.answer_sticker(r'CAACAgEAAxkBAAEHmypg5Hvr8TQcvapNYFl14UWTW3qdIAACZQkAAr-MkASUq_kdsVeamCAE')
    await m.answer(f"ü•∞–í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –≤ —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ–¥–µ–ª–∏ —è –µ–≥–æ –æ–ø—É–±–ª–∏—É—é –≤ –Ω–∞—à–µ–º —á–∞—Ç–µü•∞\n")
    await bot.send_message(chat_id=-1001520180765, text=f"–û—Ç–∑—ã–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∞—Ç-–±–æ—Ç–æ–º Alina\n\n"
                                                    f"<em><b>id</b></em> - {m.from_user.id}\n"
                                                    f"<em><b>–ò–º—è</b></em> - {name}\n"
                                                    f"<em><b>–û—Ç–∑—ã–≤</b></em> - {tixt}\n"
                                                    f"------------------------------")
    await state.finish()


@dp.message_handler(Text(equals=['‚ùóÔ∏è–û—Ç–º–µ–Ω–∞‚ùóÔ∏è']), state=feed_back_b)
async def exit_log(m: Message, state: FSMContext):
    await m.answer(f"üèõ–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüèõ", reply_markup=determined_button)
    await state.finish()


@dp.message_handler(Text(equals=['–ò—Å–ø—Ä–∞–≤–∏—Ç—å‚ùå']), state=feed_back_b)
async def cansel_log(m: Message):
    await m.answer(f"–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è", reply_markup=exit_button)
    await feed_back_b.f_1.set()


# –†–µ–≥ –∫–æ–º–µ–Ω—Ç–∞
@dp.message_handler(Text(equals=['–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤üñå']))
async def fed_deed(m: Message):
    await m.answer(f"–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è", reply_markup=exit_button)
    await feed_back_b.f_1.set()


@dp.message_handler(state=feed_back_b.f_1)
async def fed_1(m: Message):
    global name
    name = m.text
    await m.answer(f"–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤\n\n"
                   f"---–í–ù–ò–ú–ê–ù–ò–ï---\n"
                   f"–ü–∏—à–∏—Ç–µ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º")
    await feed_back_b.f_2.set()


@dp.message_handler(state=feed_back_b.f_2)
async def feed_2(m: Message):
    global tixt
    tixt = m.text
    await m.answer(f"–í–∞—à –æ—Ç–∑—ã–≤:\n\n"
                   f"<em>–ò–º—è</em> - {name}\n"
                   f"<em>–û—Ç–∑—ã–≤</em> - {tixt}\n\n"
                   f"–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –≤–µ—Ä–Ω—ã, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b>–ò—Å–ø—Ä–∞–≤–∏—Ç—å</b>‚ùå", reply_markup=menu_reply_button)
